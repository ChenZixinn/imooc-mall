{"version":3,"sources":["logo.svg","../node_modules/moment-mini/locale sync /^/.//.*$","http.js","http2.js","api.js","pages/order.js","pages/person.js","pages/type.js","pages/good.js","login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","domain","checkStatus","response","status","msg","data","checkCode","res","message","error","console","log","window","location","href","axios","interceptors","request","use","config","Promise","reject","defaults","withCredentials","post","url","params","method","baseURL","timeout","headers","then","get","JSON","stringify","login","logout","goodList","upDownGood","categoryList","categoryList2","categoryUpdate","categoryAdd","categoryDelete","goodAdd","goodUpdate","goodDelete","onOffLine","orderList","orderDerive","orderFinish","state","selectedRowKeys","loading","visible","receiverName","receiverMobile","receiverAddress","items","type","show","pagination","current","pageSize","total","confirmUp","orderNo","that","Modal","confirm","title","content","okText","cancelText","onOk","http","api","success","getData","onCancel","confirmDown","start","setState","setTimeout","onSelectChange","handleOk","handleCancel","this","pageNum","list","finally","pager","columns","dataIndex","render","v","toFixed","text","name","moment","format","row","onClick","orderItemVOList","style","backgroundColor","color","hasSelected","length","class","className","marginBottom","marginLeft","marginTop","assign","showTotal","onChange","handleTableChange","dataSource","item","border","padding","borderRadius","productName","unitPrice","quantity","totalPrice","React","Component","name1","name2","password1","password2","display","justifyContent","size","width","maxHeight","borderTop","value","localStorage","getItem","disabled","target","orderNum","parentId","confirmDelete","editId","http2","getList","placeholder","TreeNode","Select","Option","TreeSelect","beforeUpload","file","isJpgOrPng","isLt2M","imageUrl","edit","categoryOption","tree","img","categoryId","price","stock","detail","handleChange","info","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","arr","index","_item","push","ids","join","sellStatus","image","getDrop","uploadButton","rowSelection","height","src","sorter","a","b","showSearch","allowClear","treeDefaultExpandAll","childCategory","key","item2","item3","listType","showUploadList","action","alt","Login","nameShow","password","passwordShow","userName","username","setItem","personalizedSignature","role","props","history","fontSize","if","paddingBottom","prefix","Password","textAlign","loginFn","withRouter","Header","Menu","SubMenu","Layout","Content","Footer","Sider","App","selectedKeys","hash","split","menu","Item","path","from","exact","to","alignItems","marginRight","overlay","placement","background","mode","defaultSelectedKeys","minHeight","component","Good","Person","Type","Order","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ba41d41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./locale\": 167,\n\t\"./locale.js\": 167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 275;","import axios from 'axios';\n// import qs from 'qs';\nimport { message } from 'antd';\n\n\n// let domain = 'http://111.231.103.117:8081/';\nlet domain = 'http://127.0.0.1:8083/';\n\n\n\n\n\naxios.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.resolve(error.response);\n});\n\naxios.defaults.withCredentials = true;\n\nfunction checkStatus(response) {\n  // loading\n  // 如果http状态码正常，则直接返回数据\n  if (response && (response.status === 200 || response.status === 304 || response.status === 400)) {\n    return response.data;\n    // 如果不需要除了data之外的数据，可以直接 return response.data\n  }\n  // 异常状态下，把错误信息返回去\n  return {\n    status: -404,\n    msg: '网络异常'\n  };\n}\n\nfunction checkCode(res) {\n  // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n  if (res.status === -404) {\n    message.error('为保证数据正确，本系统仅用于演示后台显示功能，已将修改相关功能关闭');\n    return;\n  }\n\n  if (res.status === 10007) {\n    message.error('请重新登录');\n    console.log(window.location+'/login');\n    // window.open(window.host+'/login');\n    // window.location.href = window.location.origin+'/login';\n    window.location.href = 'http://111.231.103.117:8081/admin/index.html#/login';    \n    return;\n  }\n\n  if (res.status === 9999) {\n    message.error('请重新登录');\n\n    return;\n  }\n  if (res.status !== 10000) {\n    // message.error(res.errorMsg);\n  }\n  return res;\n}\n\nexport default {\n  post(url, params) {\n    return axios({\n      method: 'POST',\n      baseURL: domain,\n      url,\n      // data: JSON.stringify(data),\n      params: params,\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        // 'Content-Type': 'application/json; charset=UTF-8'\n      },\n      withCredentials: true,\n      // credentials: 'same-origin',\n    }, { withCredentials: true }).then(\n      (response) => {\n        return checkStatus(response);\n      }\n    ).then(\n      (res) => {\n        return checkCode(res);\n      }\n    );\n  },\n  get(url, params) {\n    return axios({\n      method: 'get',\n      baseURL: domain,\n      url,\n      params, // get 请求时带的参数\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      withCredentials: true,\n      // credentials: 'same-origin',\n    }, { withCredentials: true }).then(\n      (response) => {\n        return checkStatus(response);\n      }\n    ).then(\n      (res) => {\n        return checkCode(res);\n      }\n    );\n  }\n};\n","import axios from 'axios';\n// import qs from 'qs';\nimport { message } from 'antd';\n\n\n// let domain = 'http://111.231.103.117:8081/';\nlet domain = 'http://127.0.0.1:8083/';\n\n\n\n\n\naxios.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.resolve(error.response);\n});\n\naxios.defaults.withCredentials = true;\n\nfunction checkStatus(response) {\n  // loading\n  // 如果http状态码正常，则直接返回数据\n  if (response && (response.status === 200 || response.status === 304 || response.status === 400)) {\n    return response.data;\n    // 如果不需要除了data之外的数据，可以直接 return response.data\n  }\n  // 异常状态下，把错误信息返回去\n  return {\n    status: -404,\n    msg: '网络异常'\n  };\n}\n\nfunction checkCode(res) {\n  // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n  if (res.status === -404) {\n    message.error('为保证数据正确，本系统仅用于演示后台显示功能，已将修改相关功能关闭');\n    return;\n  }\n  if (res.status === 9999) {\n    message.error('请重新登录');\n\n    return;\n  }\n\n  if (res.status === 10007) {\n    message.error('请重新登录');\n    console.log(window.location);\n    // window.open(window.host+'/login');\n    // window.location.href = window.location.origin+'/login';\n    window.location.href = 'http://111.231.103.117:8081/admin/index.html#/login';\n\n    return;\n  }\n  \n  // console.log('location:',window.location);\n\n  if (res.status !== 10000) {\n    // message.error(res.errorMsg);\n  }\n  return res;\n}\n\nexport default {\n  post(url, data) {\n    return axios({\n      method: 'POST',\n      baseURL: domain,\n      url,\n      // data: JSON.stringify(data),\n      data: JSON.stringify(data),\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json; charset=UTF-8'\n      },\n      withCredentials: true,\n      // credentials: 'same-origin',\n    }, { withCredentials: true }).then(\n      (response) => {\n        return checkStatus(response);\n      }\n    ).then(\n      (res) => {\n        return checkCode(res);\n      }\n    );\n  },\n  get(url, params) {\n    return axios({\n      method: 'get',\n      baseURL: domain,\n      url,\n      params, // get 请求时带的参数\n      timeout: 10000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      withCredentials: true,\n      // credentials: 'same-origin',\n    }, { withCredentials: true }).then(\n      (response) => {\n        return checkStatus(response);\n      }\n    ).then(\n      (res) => {\n        return checkCode(res);\n      }\n    );\n  }\n};\n","export default {\n    login: '/adminLogin',\n    // login: '/login',\n    logout: '/user/logout',\n    goodList: '/admin/product/list',\n    upDownGood: '/admin/product/batchUpdateSellStatus',\n\n    categoryList: '/admin/category/list',\n    categoryList2: '/category/list',\n    categoryUpdate: '/admin/category/update',\n    categoryAdd: '/admin/category/add',\n    categoryDelete: '/admin/category/delete',\n\n    goodAdd:'/admin/product/add',\n    goodUpdate: '/admin/product/update',\n    goodDelete: '/admin/product/delete',\n    onOffLine: '/admin/product/batchUpdateSellStatus',\n\n    orderList: '/admin/order/list',\n    orderDerive: '/admin/order/delivered',\n    orderFinish: '/order/finish',\n    // menu: '/automarket/lifemis/sidebar/query', // 正确路径\n}  ","import React from 'react';\nimport { Table, Button, Icon, Modal, Input, message } from 'antd';\nimport './good.scss';\nimport http from  '../http';\nimport http2 from '../http2';\nimport api from '../api';\nimport moment from 'moment-mini';\n\n// const data = [];\n// for (let i = 0; i < 46; i++) {\n//   data.push({\n//     key: i,\n//     name: `Edward King ${i}`,\n//     age: 32,\n//     address: `London, Park Lane no. ${i}`,\n//   });\n// }\nexport default class extends React.Component {\n  state = {\n    selectedRowKeys: [], // Check here to configure the default column\n    loading: false,\n    visible: false,\n    data: [],\n\n    receiverName: '',\n    receiverMobile: '',\n    receiverAddress: '',\n    items: [],\n\n    type: 1,\n    show: '待定',\n    pagination: {\n      current: 1,\n      pageSize: 10,\n      total: 0,\n    }\n  }\n\n  componentDidMount () {\n    this.getData();\n  }\n\n  getData () {\n    // this.setState({ loading: true });\n    const { current, pageSize } = this.state.pagination;\n    let params = {\n      pageNum: current,\n      pageSize: 10,\n    };\n    http.get(api.orderList,params).then((res)=>{\n      this.setState({\n        data: res.data.list,\n        pagination:{\n          current:this.state.pagination.current,\n          pageSize:10,\n          total:res.data.total\n        }\n      })\n    }).finally(()=>{\n      this.setState({loading: false});\n    })\n  }\n\n  handleTableChange (pagination) {\n    const pager = { ...this.state.pagination };\n    pager.current = pagination.current;\n    this.setState({\n      pagination: pager,\n    }, () => {\n      this.getData();\n    });\n  }\n\n  confirmUp = (orderNo) => {\n    let that = this;\n    Modal.confirm({\n      title: '完结订单',\n      content: '请确认是否完结订单',\n      okText: '确认',\n      cancelText: '取消',\n      onOk () {\n        http.post(api.orderFinish,{orderNo:orderNo}).then((res)=>{\n          if(res.status === 10000){\n          message.success('成功完结');\n          that.getData();\n          }else{\n            message.error(res.msg)\n          }\n        })\n      },\n      onCancel () {\n        console.log('Cancel');\n      },\n    });\n  }\n  confirmDown = (orderNo) => {\n    let that = this;\n    Modal.confirm({\n      title: '已发货',\n      content: '请确认是否已发货',\n      okText: '确认',\n      cancelText: '取消',\n      onOk () {\n        http.post(api.orderDerive,{orderNo:orderNo}).then((res)=>{\n          if(res.status === 10000){\n          message.success('发货成功');\n          that.getData();\n          }else{\n            message.error(res.msg)\n          }\n        })\n      },\n      onCancel () {\n        console.log('Cancel');\n      },\n    });\n  }\n\n  start = () => {\n    this.setState({ loading: true });\n    // ajax request after empty completing\n    setTimeout(() => {\n      this.setState({\n        selectedRowKeys: [],\n        loading: false,\n      });\n    }, 1000);\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    this.setState({ selectedRowKeys});\n  };\n\n  handleOk = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render () {\n    const { loading, selectedRowKeys, visible } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const columns = [\n      {\n        title: '订单号',\n        dataIndex: 'orderNo',\n      },\n      {\n        title: '订单总价',\n        dataIndex: 'totalPrice',\n        render:(v)=>{\n          return(\n            <span>{(v/100).toFixed(2)}</span>\n          )\n        }\n      },\n      {\n        title: '订单状态',\n        dataIndex: 'orderStatus',\n        render:(text)=>{\n          let name = '';\n          console.log('text:',text);\n          switch(text){\n            case 0: name = '用户已取消';break;\n            case 10: name = '未付款';break;\n            case 20: name = '已付款';break;\n            case 30: name = '已发货';break;\n            case 40: name = '交易完成';break;\n          }\n          return(\n            <span>{name}</span>\n          )\n        }\n      },\n      {\n        title: '支付方式',\n        dataIndex: 'address',\n        render:()=>{\n          return(\n            <span>在线支付</span>\n          )\n        }\n      },\n      {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        render:(text)=>{\n          return(\n            <span>{moment(text).format('YYYY-MM-DD HH:mm:ss')}</span>\n          )\n        }\n      },\n      {\n        title: '操作',\n        dataIndex: 'opt',\n        render: (text,row) => {\n          return (\n            <div>\n              <Button onClick={()=>{\n                this.setState({type:1,visible:true,items:row.orderItemVOList})\n              }}>查看订单信息</Button>\n              <Button onClick={()=>{\n                this.setState({\n                  type:2,\n                  visible:true,\n                  receiverName: row.receiverName,\n    receiverMobile: row.receiverMobile,\n    receiverAddress: row.receiverAddress,\n                })\n              }}>查看收件人信息</Button>\n                  <Button onClick={()=>this.confirmDown(row.orderNo)} style={{ backgroundColor: 'red', color: '#ffffff' }}><Icon type=\"car\" />已发货</Button>\n          <Button onClick={()=>this.confirmUp(row.orderNo)} style={{ backgroundColor: 'green', color: '#ffffff' }}><Icon type=\"close\" />订单完结</Button>\n            </div>\n          )\n        }\n      },\n    ];\n    const hasSelected = selectedRowKeys.length > 0;\n    return (\n      <div class=\"wrapper\">\n        <h3>订单管理</h3>\n        <div className=\"btns\">\n          {/* <Button onClick={() => {\n            this.setState({ visible: true })\n          }} style={{ backgroundColor: 'blue', color: '#ffffff' }}><Icon type=\"gift\" />配货完成</Button> */}\n        </div>\n        <div style={{ marginBottom: 16 }}>\n          <span style={{ marginLeft: 8,marginTop:'20px' }}>\n            {hasSelected ? `选择了 ${selectedRowKeys.length} 项` : ''}\n          </span>\n        </div>\n        <Table \n        // rowSelection={rowSelection}\n          pagination={Object.assign({}, this.state.pagination, {\n            showTotal: () => {\n              return '共' + this.state.pagination.total + '项';\n            }\n          })}\n          onChange={(pagination) => this.handleTableChange(pagination)} columns={columns} dataSource={this.state.data} />\n        <Modal\n          title={this.state.type === 1 ? '订单信息' : '收件人信息'}\n          visible={visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          {this.state.type === 1 ? \n          <div>\n            {this.state.items && this.state.items.map((item)=>{\n              return(\n                <div style={{border: '1px solid #e8e8e8',padding: '0 10px 10px 10px',marginBottom:'10px', borderRadius:'4px'}}>\n                  <div className=\"item\">\n                    订单号：{item.orderNo}\n                  </div>\n                  <div className=\"item\">\n                    商品名称：{item.productName}\n                  </div>\n                  <div className=\"item\">\n                    商品单价：{(item.unitPrice/100).toFixed(2)}\n                  </div>\n                  <div className=\"item\">\n                    商品数量：{item.quantity}\n                  </div>\n                  <div className=\"item\">\n                    总价：{(item.totalPrice/100).toFixed(2)}\n                  </div>\n                </div>\n              )\n            })}\n          </div> : <div>\n                           <div className=\"item\">\n                    收件人：{this.state.receiverName}\n                  </div>\n                  <div className=\"item\">\n                    电话：{this.state.receiverMobile}\n                  </div>\n                  <div className=\"item\">\n                    收件地址：{this.state.receiverAddress}\n                  </div>\n                \n          </div> \n          }\n        </Modal>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport {Card,Input,Icon,Button,message} from 'antd';\nimport http from '../http';\nimport api from '../api'\n\n\nexport default class extends React.Component {\n    \n    state={\n        name1:'',\n        name2: '',\n        password1:'',\n        password2:'',\n    }\n\n    render () {\n        const{name1,name2,password1,password2} = this.state;\n        return (\n            <div class=\"wrapper\" style={{display:'flex', justifyContent:'space-around'}}>\n    <Card size=\"default\" title=\"基本信息\"  style={{ width: 400,maxHeight:'400px',borderTop:'3px solid #007bff' }}>\n      <p>用户名</p>\n      <Input value={localStorage.getItem('username')} disabled={true} onChange={(e)=>{this.setState({name1: e.target.value})}}></Input>\n      <p style={{marginTop:'10px'}}>个性签名</p>\n      <Input value={localStorage.getItem('personalizedSignature')} disabled={true} onChange={(e)=>{this.setState({name1: e.target.value})}}></Input>\n      {/* <p style={{marginTop:'10px'}}>角色</p>\n      <Input value={localStorage.getItem('role') === 1 ? '普通用户' :'管理员'} disabled={true} onChange={(e)=>{this.setState({name1: e.target.value})}}></Input> */}\n    \n    </Card>\n    {/* <Card size=\"default\" title=\"修改密码\"  style={{ width: 400,maxHeight:'300px' ,borderTop:'3px solid #007bff'}}>\n    <p>原密码</p>\n    <Input.Password\n    value={password1}\n                                    style={{marginBottom:'20px'}}\n                                        onChange={(e) => { this.setState({ password1: e.target.value, passwordShow:false }) }}\n                                        prefix={<Icon type=\"dash\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入密码\" />\n      <p>新密码</p>\n      <Input.Password\n      value={password2}\n                                    style={{marginBottom:'20px'}}\n                                        onChange={(e) => { this.setState({ password2: e.target.value, passwordShow:false }) }}\n                                        prefix={<Icon type=\"dash\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入密码\" />\n    <Button onClick={()=>{\n        if(!password1){\n            message.error('请输入原密码');\n            return;\n        }\n        if(!password2){\n            message.error('请输入新密码');\n            return;\n        }\n          http.post(api.nameEdit,{password1:this.state.name1,password2:this.state.name2})\n      }} type={'primary'} style={{float:'right'}}>确认修改</Button>\n    </Card> */}\n</div>\n        );\n    }\n}","import React from 'react';\nimport { Table, Button, Icon, Modal, Input, message } from 'antd';\n// import http from '../http';\n// import api from '../api';\nimport http from  '../http';\nimport http2 from '../http2';\nimport api from '../api';\nimport moment from 'moment-mini';\n  \n  // const data = [];\n  // for (let i = 0; i < 46; i++) {\n  //   data.push({\n  //     name: i,\n  //     name: `Edward King ${i}`,\n  //     age: 32,\n  //     address: `London, Park Lane no. ${i}`,\n  //   });\n  // }\nexport default class extends React.Component {\n    state={\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n        visible: false,\n        data:[],\n        name:'',\n        orderNum: '',\n        type: '',\n        id: '',\n        parentId: '',\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          total: 0,\n        }\n    }\n    componentDidMount(){\n      this.getData();\n    }\n\n    handleTableChange(pagination) {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      }, () => {\n        this.getList();\n      });\n    }\n\n    getData(){\n      // this.setState({ loading: true });\n      const { current, pageSize } = this.state.pagination;\n      let params = {\n        pageNum: current,\n        pageSize: 10,\n      };\n      http.get(api.categoryList,params).then((res)=>{\n        this.setState({\n          data: res.data.list,\n            pagination:{\n              current:this.state.pagination.current,\n              pageSize:10,\n              total:res.data.total\n            }\n        })\n      }).finally(()=>{\n        this.setState({loading: false});\n      })\n    }\n      confirmDelete =(id) => {\n        let that = this;\n        Modal.confirm({\n          title: '删除',\n          content: '请确认是否删除',\n          okText: '确认',\n          cancelText: '取消',\n          onOk() {\n            http.post(api.categoryDelete,{id: id}).then((res)=>{\n              if(res.status === 10000){\n                message.success('删除成功');\n                that.getData();\n              }else{\n                message.error(res.msg);\n              }\n            })\n          },\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n      }\n\n    start = () => {\n        this.setState({ loading: true });\n        // ajax request after empty completing\n        setTimeout(() => {\n          this.setState({\n            selectedRowKeys: [],\n            loading: false,\n          });\n        }, 1000);\n      };\n\n      onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n      };\n\n      handleOk = () => {\n        let url='';\n        if(this.state.editId === \"\"){\n          url = api.categoryAdd\n        }else{\n          url = api.categoryUpdate\n        }\n        http2.post(url,{id:this.state.id,name: this.state.name,orderNum: this.state.orderNum, type:this.state.type, parentId: this.state.parentId})\n        .then((res)=>{\n          if(res.status === 10000){\n            message.success('更新成功');\n            this.getData();\n          }else{\n            message.error(res.msg);\n          }\n        })\n        this.setState({\n          visible: false,\n        });\n      };\n    \n      handleCancel = () => {\n        this.setState({\n          visible: false,\n        });\n      };\n\n      handleTableChange(pagination) {\n        const pager = { ...this.state.pagination };\n        pager.current = pagination.current;\n        this.setState({\n          pagination: pager,\n        }, () => {\n          this.getData();\n        });\n      }\n\n    render () {\n      const columns = [\n        {title:'分类ID',\n        dataIndex: 'id'\n      },\n        {\n          title: '分类名称',\n          dataIndex: 'name',\n        },\n        {\n          title: '排序值',\n          dataIndex: 'orderNum',\n        },\n        {\n          title: '添加时间',\n          dataIndex: 'createTime',\n          render:(text)=>{\n            return(\n              <span>{moment(text).format('YYYY-MM-DD HH:mm:ss')}</span>\n            )\n          }\n        },\n          {\n            title: '操作',\n            dataIndex: 'address',\n            render:(text,row)=>{\n                return(\n                    <div>\n                    <Button onClick={()=>{\n                        this.setState({\n                          visible:true,\n                          name: row.name,\n                          type: row.type,\n                          parentId: row.parentId,\n                          orderNum: row.orderNum,\n                          editId: row.id,\n                          id: row.id})\n                    }}><Icon type=\"edit\" />修改</Button>\n                    <Button onClick={()=>this.confirmDelete(row.id)} style={{backgroundColor:'red',color:'#ffffff'}}><Icon type=\"delete\" />删除</Button>\n                    </div>\n                )\n            }\n          },\n      ];\n        const { loading, selectedRowKeys, visible } = this.state;\n        const rowSelection = {\n          selectedRowKeys,\n          onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div class=\"wrapper\">\n                <h3>分类管理</h3>\n                <div className=\"btns\">\n                    <Button onClick={()=>{\n                        this.setState({visible:true,editId: ''})\n                    }} style={{backgroundColor:'blue',color:'#ffffff'}}><Icon type=\"plus\" />新增</Button>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n          <span style={{ marginLeft: 8 }}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n        </div>\n        <Table \n        // rowSelection={rowSelection}\n         columns={columns}\n         pagination={Object.assign({}, this.state.pagination, {\n          showTotal: () => {\n            return '共' + this.state.pagination.total + '项';\n          }\n        })}\n        onChange={(pagination) => this.handleTableChange(pagination)}\n          dataSource={this.state.data} />\n            <Modal\n            title={this.state.editId === \"\" ? \"新增分类\" : '编辑分类'}\n            visible={visible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            >\n            <div className=\"item\">\n              <div className=\"item-name\">新增分类：</div>\n              <div className=\"item-value\">\n                <Input onChange={(e)=>{\n                  this.setState({name: e.target.value})\n                }} placeholder={'请输入名称'} value={this.state.name}></Input>\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"item-name\">排序值：</div>\n              <div className=\"item-value\">\n                <Input onChange={(e)=>{\n                  this.setState({orderNum: e.target.value})\n                }} placeholder={'请输入排序值'} value={this.state.orderNum}></Input>\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"item-name\">目录级别：</div>\n              <div className=\"item-value\">\n                <Input onChange={(e)=>{\n                  this.setState({type: e.target.value})\n                }} placeholder={'请输入目录级别'} value={this.state.type}></Input>\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"item-name\">上级目录ID：</div>\n              <div className=\"item-value\">\n                <Input onChange={(e)=>{\n                  this.setState({parentId: e.target.value})\n                }} placeholder={'请输入上级目录ID'} value={this.state.parentId}></Input>\n              </div>\n            </div>\n            </Modal>\n        </div>\n        );\n    }\n}","import React from 'react';\nimport { Table, Button, Icon, Modal, Input, message, Upload, Select, TreeSelect } from 'antd';\nimport http from  '../http';\nimport http2 from '../http2';\nimport api from '../api';\nimport './good.scss';\nimport moment from 'moment-mini';\n\nconst { Option } = Select;\nconst { TreeNode } = TreeSelect;\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n  return isJpgOrPng && isLt2M;\n}\n  \nexport default class extends React.Component {\n    state={\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n        visible: false,\n        imageUrl: '',\n        data:[],\n        id: '',\n        edit: true,\n        categoryOption: [],\n        tree:[],\n        img:'',\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          total:0,\n        },\n\n        categoryId: '',\n        name: '',\n        price:'',\n        stock: '',\n        status: '',\n        detail: '',\n    }\n\n    componentDidMount(){\n      this.getData();\n      this.getDrop();\n    }\n\n    getDrop(){\n      http.get(api.categoryList2).then((res)=>{\n        if(res.status === 10000){\n        this.setState({tree:res.data});\n        }else{\n          message.error(res.msg);\n        }\n      })\n    }\n\n    getData(){\n      // this.setState({ loading: true });\n      const { current, pageSize } = this.state.pagination;\n      let params = {\n        pageNum: current,\n        pageSize: pageSize,\n      };\n      http.get(api.goodList,params).then((res)=>{\n        this.setState({data: res.data.list,\n          pagination:{\n            current:this.state.pagination.current,\n            pageSize:10,\n            total:res.data.total\n          }\n        })\n      }).finally(()=>{\n        this.setState({loading: false});\n      })\n    }\n\n    handleChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({ loading: true });\n        return;\n      }\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl =>\n          this.setState({\n            img:info.file.response.data,\n            imageUrl,\n            loading: false,\n          }),\n        );\n      }\n    };\n\n    handleTableChange(pagination) {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      }, () => {\n        this.getData();\n      });\n    }\n\n    confirmUp =()=> {\n      let arr = [];\n      const {selectedRowKeys} = this.state;\n      this.state.data.map((item,index)=>{\n        selectedRowKeys.map((_item)=>{\n          if(_item === index){\n            arr.push(item.id);\n          }\n        })\n      })\n      let that = this;\n        Modal.confirm({\n          title: '上架商品',\n          content: '请确认是否上架所选商品',\n          okText: '确认',\n          cancelText: '取消',\n          onOk() {\n            http.post(api.upDownGood,{ids:arr.join(','),sellStatus: 1}).then((res)=>{\n              if(res.status === 10000){\n                message.success('上架成功');\n                that.getData();\n                }else{\n                  message.error(res.msg)\n                }\n            })\n          },\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n      }\n      confirmDown =() => {\n        let arr = [];\n        const {selectedRowKeys} = this.state;\n        this.state.data.map((item,index)=>{\n          selectedRowKeys.map((_item)=>{\n            if(_item === index){\n              arr.push(item.id);\n            }\n          })\n        })\n        let that = this;\n        Modal.confirm({\n          title: '下架商品',\n          content: '请确认是否下架所选商品',\n          okText: '确认',\n          cancelText: '取消',\n          onOk() {\n            http.post(api.onOffLine,{ids:arr.join(','),sellStatus: 0}).then((res)=>{\n              if(res.status === 10000){\n              message.success('下架成功');\n              that.getData();\n              }else{\n                message.error(res.msg)\n              }\n            })\n          },\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n      }\n\n    start = () => {\n        this.setState({ loading: true });\n        // ajax request after empty completing\n        setTimeout(() => {\n          this.setState({\n            selectedRowKeys: [],\n            loading: false,\n          });\n        }, 1000);\n      };\n\n      onSelectChange = (selectedRowKeys,row) => {\n        this.setState({ selectedRowKeys });\n      };\n\n      handleOk = () => {\n        const{name,detail,stock,price,categoryId,img,id, imageUrl} = this.state;\n        // http2.post(api.goodAdd.{})\n        http2.post(`${this.state.edit ? api.goodUpdate : api.goodAdd}`,{\n          categoryId:categoryId,\n          name:name,\n          detail:detail,\n          stock:stock,\n          price:price,\n          id: id,\n          image: img ? img : null\n        }).then((res)=>{\n          if(res.status ===10000){\n            this.setState({\n              visible: false,\n            });\n            this.getData();\n          }else{\n            message.error(res.msg);\n          }\n        })\n      };\n    \n      handleCancel = () => {\n        this.setState({\n          visible: false,\n        });\n      };\n\n    render () {\n        const { loading, selectedRowKeys, visible, imageUrl } = this.state;\n        const uploadButton = (\n          <div>\n            <Icon type={this.state.loading ? 'loading' : 'plus'} />\n            <div className=\"ant-upload-text\">Upload</div>\n          </div>\n        );\n        const rowSelection = {\n          selectedRowKeys,\n          onChange: this.onSelectChange,\n        };\n        console.log('selectedRowKeys:',selectedRowKeys);\n        const columns = [\n          {\n            title: '商品编号',\n            dataIndex: 'id',\n          },\n          {\n            title: '商品名',\n            dataIndex: 'name',\n          },\n          {\n            title: '商品简介',\n            dataIndex: 'detail',\n          },\n          {\n              title: '商品图片',\n              dataIndex: 'image',\n              render:(text)=>{\n                return(\n                  <img style={{width:'50px',height:'50px'}} src={text}></img>\n                )\n              }\n            },\n            {\n              title: '商品库存',\n              dataIndex: 'stock',\n            },\n            {\n              title: '商品售价',\n              dataIndex: 'price',\n              sorter: (a, b) => a.price - b.price,\n            },\n            {\n              title: '上架状态',\n              dataIndex: 'status',\n              render:(text)=>{\n                return(\n                  <span>{text === 1 ? '已上架' : '已下架'}</span>\n                )\n              }\n            },\n            {\n              title: '创建时间',\n              dataIndex: 'createTime',\n              render:(text)=>{\n                return(\n                <span>{moment(text).format('YYYY-MM-DD HH:mm:ss')}</span>\n                )\n              }\n            },\n            {\n              title: '操作',\n              dataIndex: 'address',\n              render:(text,row)=>{\n                  return(\n                    <div>\n                      <Button onClick={()=>{\n                        this.setState({\n                          visible:true,\n                          edit: true,\n                          name:row.name,\n                          price: row.price,\n                          detail: row.detail,\n                          stock: row.stock,\n                          categoryId: row.categoryId,\n                          img: row.image,\n                          imageUrl:row.image,\n                          id: row.id,\n                        })\n                      }}><Icon type=\"edit\" />修改</Button>\n                                            <Button type={'danger'} onClick={()=>{\n                                                      let that = this;\n                                                      Modal.confirm({\n                                                        title: '删除',\n                                                        content: '请确认是否删除',\n                                                        okText: '确认',\n                                                        cancelText: '取消',\n                                                        onOk() {\n                                                          http2.post(api.goodDelete +'?id=' + row.id,{\n                                                            id:row.id,\n                                                          }).then((res)=>{\n                                                            if(res.status ===10000){\n                                                              that.getData();\n                                                              message.error('删除成功');\n                                                            }else{\n                                                              message.error(res.msg);\n                                                            }\n                                                          })\n                                                        },\n                                                        onCancel() {\n                                                          console.log('Cancel');\n                                                        },\n                                                      });\n                      }}><Icon type=\"delete\" />删除</Button>\n                    </div>\n\n                  )\n              }\n            },\n        ];\n        const hasSelected = selectedRowKeys.length > 0;\n        const {data} = this.state;\n        return (\n            <div class=\"wrapper\">\n                <h3>商品管理</h3>\n                <div className=\"btns\">\n                    <Button onClick={()=>{\n                        this.setState({visible:true,edit:false})\n                    }} style={{backgroundColor:'blue',color:'#ffffff'}}><Icon type=\"plus\" />新增商品</Button>\n                    <Button onClick={this.confirmDown} style={{backgroundColor:'red',color:'#ffffff'}}><Icon type=\"arrow-down\" />下架商品</Button>\n                    <Button onClick={this.confirmUp} style={{backgroundColor:'green',color:'#ffffff'}}><Icon type=\"arrow-up\" />上架商品</Button>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n          <span style={{ marginLeft: 8,marginTop:'10px' }}>\n            {hasSelected ? `选择了 ${selectedRowKeys.length} 项` : ''}\n          </span>\n        </div>\n        <Table\n          rowSelection={rowSelection}\n          columns={columns} \n          dataSource={data}\n          pagination={Object.assign({}, this.state.pagination, {\n            showTotal: () => {\n              return '共' + this.state.pagination.total + '项';\n            }\n          })}\n          onChange={(pagination) => this.handleTableChange(pagination)}\n           />\n            <Modal\n            title={this.state.edit ? '编辑商品': '新增商品'}\n            visible={visible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            >\n              <div className=\"item\">\n              <div className=\"item-name\">商品分类：</div>\n              <div className=\"item-value\">\n              <TreeSelect\n        showSearch\n        style={{ width: '100%' }}\n        value={this.state.categoryId}\n        // dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n        placeholder=\"Please select\"\n        allowClear\n        treeDefaultExpandAll\n        onChange={(value) => {this.setState({categoryId: value})}}\n      >\n        {\n          this.state.tree.map((item)=>{\n            if(item.childCategory.length === 0){\n              return(\n                <TreeNode value={item.id} title={item.name} key={item.id} />\n              )\n            }else{\n              return(\n                <TreeNode value={item.id} title={item.name} key={item.id}>\n                  {item.childCategory.map((item2)=>{\n                    console.log(\"item2:\",item2);\n                    if(item2.childCategory.length === 0){\n                      return(\n                <TreeNode value={item2.id} title={item2.name} key={item2.id} />\n                      )\n                    }else{\n                      return(\n        <TreeNode value={item2.id} title={item2.name} key={item2.id}>\n          {\n            item2.childCategory.map((item3)=>{\n              return(\n                <TreeNode value={item3.id} title={item3.name} key={item3.id} />\n              )\n            })\n          }\n        </TreeNode>\n\n                      )\n                    }\n                  })}\n                </TreeNode>\n              )\n            }\n          })\n        }\n      </TreeSelect>\n              {/* <Select\n                showSearch\n                allowClear\n                className={'filter-value'}\n                placeholder=\"请选择商品分类\"\n                onChange={(value) => {this.setState({categoryId: value})}}\n                value={this.state.categoryId || '请选择商品分类'}\n              >\n                {this.state.categoryOption.map((item) => {\n                  return (\n                    <Option key={item.id} value={item.id}>{item.name}</Option>\n                  );\n                })}\n              </Select> */}\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"item-name\">商品名称：</div>\n              <div className=\"item-value\">\n                <Input onChange={(e)=>{\n                  this.setState({name: e.target.value})\n                }} placeholder={'请输入名称'} value={this.state.name}></Input>\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"item-name\">商品简介：</div>\n              <div className=\"item-value\">\n                <Input onChange={(e)=>{\n                  this.setState({detail: e.target.value})\n                }} placeholder={'请输入商品简介'} value={this.state.detail}></Input>\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"item-name\">商品库存：</div>\n              <div className=\"item-value\">\n                <Input onChange={(e)=>{\n                  this.setState({stock: e.target.value})\n                }} placeholder={'请输入商品库存'} value={this.state.stock}></Input>\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"item-name\">商品售价：</div>\n              <div className=\"item-value\">\n                <Input  onChange={(e)=>{\n                  this.setState({price: e.target.value})\n                }} placeholder={'请输入商品售价'} value={this.state.price}></Input>\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"item-name\">商品图片：</div>\n              <div className=\"item-value\">\n              <Upload\n                name=\"file\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                withCredentials={true}\n                showUploadList={false}\n                action=\"http://111.231.103.117:8081/admin/upload/file\"\n                beforeUpload={beforeUpload}\n                onChange={this.handleChange}\n              >\n                {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n              </Upload>\n              </div>\n            </div>\n            </Modal>\n        </div>\n        );\n    }\n}","import React from 'react';\nimport './login.scss';\nimport { Input, Icon, Tooltip, Button, message } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport http from './http';\nimport api from './api';\n\nclass Login extends React.Component {\n    state = {\n        name: '',\n        nameShow: false,\n        password: '',\n        passwordShow: false,\n    }\n\n    loginFn () {\n        const {name,password} = this.state;\n        if(!name){\n            this.setState({nameShow: true});\n            return;\n        }\n        if(!password){\n            this.setState({passwordShow: true});\n            return;\n        }\n        http.post(api.login,{userName:name,password:password}).then((res)=>{\n            if(res.status === 10000){\n                console.log('user',res.data.username);\n                localStorage.setItem('username',res.data.username);\n                localStorage.setItem('personalizedSignature',res.data.personalizedSignature);\n                localStorage.setItem('role',res.data.role);\n                this.props.history.push('/layout/good');\n            }else{\n                message.error(res.msg);\n            }\n        })\n    }\n\n    render () {\n        const { name, password, nameShow, passwordShow } = this.state;\n        return (\n            <div class=\"wrapper\">\n                <div class=\"login-box\">\n                    <div class=\"login-logo\">\n                        <h1 style={{ color: '#1baeae', fontSize: '35px' }}>管理系统登陆</h1>\n                    </div>\n                    <div class=\"card\">\n                        <div class=\"card-body login-card-body\">\n                            <p class=\"login-box-msg\"> 欢迎来到慕慕生鲜后台管理系统!</p>\n                            <form action=\"@{/admin/login}\" method=\"post\">\n                                <div if=\"${not #strings.isEmpty(session.errorMsg)}\" class=\"form-group\">\n                                    <div class=\"alert alert-danger\" >请登录</div>\n                                </div>\n                                <div class=\"form-group has-feedback\" style={{paddingBottom:'20px', marginTop: '30px'}}>\n                                    <span class=\"fa fa-user form-control-feedback\"></span>\n                                    <Input\n                                        onChange={(e) => { this.setState({ name: e.target.value,nameShow:false }) }}\n                                        placeholder=\"请输入账号\"\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                        style={{marginBottom:'20px'}}\n                                    />\n                                    {nameShow&&<span style={{ marginBottom: '20px', color:'#d32535' }}>请输入账号</span>}\n                                </div>\n                                <div class=\"form-group has-feedback\">\n                                    <span class=\"fa fa-lock form-control-feedback\"></span>\n                                    <Input.Password\n                                    style={{marginBottom:'20px'}}\n                                        onChange={(e) => { this.setState({ password: e.target.value, passwordShow:false }) }}\n                                        prefix={<Icon type=\"dash\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入密码\" />\n                                    {passwordShow &&<span style={{marginTop:'20px', color:'#d32535'}}>请输入密码</span>}\n\n                                </div>\n                                <div class=\"form-group has-feedback\"></div>\n                                <div class=\"row\" style={{ marginTop: '20px', textAlign: 'center', fontSize: '16px' }}>\n                                    <div class=\"col-4\" >\n                                        <Button type=\"primary\" onClick={() => {\n                                            this.loginFn();\n                                        }} class=\"btn btn-primary btn-block btn-flat\">登录\n                        </Button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch, Redirect, Link } from 'react-router-dom';\nimport { Layout, Menu, Breadcrumb, Icon, Dropdown, Button, message } from 'antd';\nimport '../node_modules/antd/dist/antd.css';\nimport Order from './pages/order';\nimport Person from './pages/person';\nimport Type from './pages/type';\nimport Good from './pages/good';\nimport Login from './login';\nimport './home.scss';\nimport http from './http';\nimport api from './api';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\nexport default class App extends React.Component {\n  state={\n    selectedKeys:''\n  }\n\n  componentDidMount(){\n    let key = window.location.hash.split('/')[window.location.hash.split('/').length-1];\n    console.log(window.location.hash.split('/'))\n    console.log('kkkkkkkkkkkk:',key);\n    this.setState({selectedKeys: key});\n  }\n  render () {\n    const menu = (\n      <Menu>\n        <Menu.Item>\n          <a onClick={()=>{\n            http.post(api.logout).then((res)=>{\n              if(res.status === 10000){\n                // console.log(window.location);\n                // window.location.href = window.location.origin+'/login';\n                window.location.href = 'http://111.231.103.117:8081/admin/index.html#/login';\n              }else{\n                message.error(res.msg);\n              }\n            })\n          }}>\n            退出\n          </a>\n        </Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/login\" >\n            <Login></Login>\n            </Route>\n            <Redirect from=\"/\" exact to=\"/login\" />{/*注意redirect转向的地址要先定义好路由*/}\n            <Route path=\"/layout\" >\n              <Layout>\n                <Header className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <div>\n                  <Icon type=\"laptop\" size=\"large\" style={{ color: '#26c6da', fontSize: '28px' }} />\n                  <span style={{marginLeft:'20px',color:'white'}}>慕慕生鲜后台管理系统</span>\n                  </div>\n                  <div>\n                  <a target={'_blank'} href=\"http://111.231.103.117/#/index\" style={{marginRight:'20px'}}>慕慕生鲜首页</a>\n                  <Dropdown overlay={menu} placement=\"bottomCenter\">\n                    <Button><Icon type=\"user\" />{localStorage.getItem('username')}</Button>\n                  </Dropdown>\n                  </div>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                  <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                    <Sider width={200} style={{ background: '#fff' }}>\n                      <Router>\n                        <Menu\n                          mode=\"inline\"\n                          defaultSelectedKeys={['good']}\n                          // defaultOpenKeys={['sub1']}\n                          selectedKeys={this.state.selectedKeys}\n                          style={{ height: '100%' }}\n                        >\n                          <Menu.Item key=\"good\" onClick={()=>{\n                            this.setState({selectedKeys:'good'})\n                          }}><Link to=\"/layout/good\"><Icon type=\"inbox\" />商品管理</Link> </Menu.Item>\n                          <Menu.Item onClick={()=>{\n                            this.setState({selectedKeys:'type'})\n                          }} key=\"type\"><Link to=\"/layout/type\"><Icon type=\"bars\" />分类管理</Link></Menu.Item>\n                          <Menu.Item onClick={()=>{\n                            this.setState({selectedKeys:'order'})\n                          }} key=\"order\"><Link to=\"/layout/order\"><Icon type=\"project\" />订单管理</Link></Menu.Item>\n                          <Menu.Item onClick={()=>{\n                            this.setState({selectedKeys:'person'})\n                          }} key=\"person\"><Link to=\"/layout/person\"><Icon type=\"user\" />个人信息</Link></Menu.Item>\n                        </Menu>\n                      </Router>\n                    </Sider>\n                    <Content style={{ padding: '0 24px', minHeight: 280 }}>\n                      <Router>\n                        <Switch>\n                          <Route exact path=\"/\" render={() => <Redirect to=\"/good\" />} />\n                          <Route path=\"/layout/good\" component={Good} />\n                          <Route path=\"/layout/person\" component={Person} />\n                          <Route path=\"/layout/type\" component={Type} />\n                          <Route path=\"/layout/order\" component={Order} />\n                        </Switch>\n                      </Router>\n                    </Content>\n                  </Layout>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>慕慕生鲜 ©2019 Created by imooc</Footer>\n              </Layout>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}